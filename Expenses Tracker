import java.io.*;
import java.util.*;

class Expense {
    private String date;
    private String category;
    private double amount;

    public Expense(String date, String category, double amount) {
        this.date = date;
        this.category = category;
        this.amount = amount;
    }

    public String getDate() {
        return date;
    }

    public String getCategory() {
        return category;
    }

    public double getAmount() {
        return amount;
    }

    @Override
    public String toString() {
        return "Date: " + date + ", Category: " + category + ", Amount: " + amount;
    }
}

class User {
    private String username;
    private String password;
    private List<Expense> expenses;

    public User(String username, String password) {
        this.username = username;
        this.password = password;
        this.expenses = new ArrayList<>();
    }

    public String getUsername() {
        return username;
    }

    public boolean checkPassword(String password) {
        return this.password.equals(password);
    }

    public void addExpense(Expense expense) {
        expenses.add(expense);
    }

    public List<Expense> getExpenses() {
        return expenses;
    }
}

class ExpenseTrackerApp {
    private static final String FILE_PATH = "users.txt";
    private Map<String, User> users;

    public ExpenseTrackerApp() {
        users = new HashMap<>();
        loadUsers();
    }

    public void registerUser(String username, String password) {
        if (users.containsKey(username)) {
            System.out.println("Username already exists. Try a different username.");
        } else {
            users.put(username, new User(username, password));
            saveUsers();
            System.out.println("User registered successfully.");
        }
    }

    public User loginUser(String username, String password) {
        User user = users.get(username);
        if (user != null && user.checkPassword(password)) {
            System.out.println("Login successful.");
            return user;
        } else {
            System.out.println("Invalid username or password.");
            return null;
        }
    }

    public void addExpense(User user, String date, String category, double amount) {
        Expense expense = new Expense(date, category, amount);
        user.addExpense(expense);
        saveUsers();
        System.out.println("Expense added successfully.");
    }

    public void listExpenses(User user) {
        List<Expense> expenses = user.getExpenses();
        if (expenses.isEmpty()) {
            System.out.println("No expenses recorded.");
        } else {
            System.out.println("Expenses:");
            for (Expense expense : expenses) {
                System.out.println(expense);
            }
        }
    }

    public void summarizeByCategory(User user) {
        Map<String, Double> categorySum = new HashMap<>();
        for (Expense expense : user.getExpenses()) {
            categorySum.put(expense.getCategory(), categorySum.getOrDefault(expense.getCategory(), 0.0) + expense.getAmount());
        }
        System.out.println("Category-wise Expense Summary:");
        for (Map.Entry<String, Double> entry : categorySum.entrySet()) {
            System.out.println("Category: " + entry.getKey() + ", Total: " + entry.getValue());
        }
    }

    private void loadUsers() {
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(FILE_PATH))) {
            users = (Map<String, User>) ois.readObject();
        } catch (IOException | ClassNotFoundException e) {
            System.out.println("No saved data found.");
        }
    }

    private void saveUsers() {
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(FILE_PATH))) {
            oos.writeObject(users);
        } catch (IOException e) {
            System.out.println("Error saving data.");
        }
    }

    public static void main(String[] args) {
        ExpenseTrackerApp app = new ExpenseTrackerApp();
        Scanner scanner = new Scanner(System.in);
        
        while (true) {
            System.out.println("\nExpense Tracker Application");
            System.out.println("1. Register");
            System.out.println("2. Login");
            System.out.println("3. Exit");
            System.out.print("Choose an option: ");
            
            int choice = scanner.nextInt();
            scanner.nextLine(); // consume newline
            
            switch (choice) {
                case 1:
                    System.out.print("Enter username: ");
                    String username = scanner.nextLine();
                    System.out.print("Enter password: ");
                    String password = scanner.nextLine();
                    app.registerUser(username, password);
                    break;
                case 2:
                    System.out.print("Enter username: ");
                    username = scanner.nextLine();
                    System.out.print("Enter password: ");
                    password = scanner.nextLine();
                    User user = app.loginUser(username, password);
                    if (user != null) {
                        boolean loggedIn = true;
                        while (loggedIn) {
                            System.out.println("\nUser Menu");
                            System.out.println("1. Add Expense");
                            System.out.println("2. List Expenses");
                            System.out.println("3. Summarize by Category");
                            System.out.println("4. Logout");
                            System.out.print("Choose an option: ");
                            
                            int userChoice = scanner.nextInt();
                            scanner.nextLine(); // consume newline
                            
                            switch (userChoice) {
                                case 1:
                                    System.out.print("Enter date (YYYY-MM-DD): ");
                                    String date = scanner.nextLine();
                                    System.out.print("Enter category: ");
                                    String category = scanner.nextLine();
                                    System.out.print("Enter amount: ");
                                    double amount = scanner.nextDouble();
                                    scanner.nextLine(); // consume newline
                                    app.addExpense(user, date, category, amount);
                                    break;
                                case 2:
                                    app.listExpenses(user);
                                    break;
                                case 3:
                                    app.summarizeByCategory(user);
                                    break;
                                case 4:
                                    loggedIn = false;
                                    break;
                                default:
                                    System.out.println("Invalid option.");
                            }
                        }
                    }
                    break;
                case 3:
                    System.out.println("Exiting...");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }
}
